---
import { WOMPI_PUBLIC_KEY, LIBRO_PRECIO, LIBRO_PRECIO_CENTS, LIBRO_TITULO } from "../config";
import Checkmark from "./icons/Checkmark.astro";

// Definición de los dos modelos de venta
const pricingOptions = {
  ebook: {
    title: "Ebook",
    amount: {
      decimal: "15",
      cents: "000"
    },
    currency: "COP",
    details: [
    "Entrega en las próximas horas por correo electrónico",
    "Formatos PDF y EPUB para cualquier dispositivo",
      "Acceso permanente",
      "Descarga directa"
    ],
    button: {
      label: "Comprar por link",
      url: "#comprar-ebook"
    },
    isPopular: true
  },
  amazon: {
    title: "Amazon",
    amount: {
      decimal: "4",
      cents: "00"
    },
    currency: "USD",
    details: [
      "Disponible en Amazon Kindle",
      "Sincronización entre dispositivos",
      "Compra segura a través de Amazon",
      "Soporte técnico de Amazon"
    ],
    button: {
      label: "Comprar en Amazon",
      url: "https://www.amazon.com/STARTUPS-%C3%81NGELES-primeros-creyentes-cambian-ebook/dp/B0DZJ3FQGX/ref=mp_s_a_1_1?crid=YY538PHPGWHN&dib=eyJ2IjoiMSJ9.gAI1DM3WibRk83FgKdfx8c4XXSV0KumpTR1XamtfFeKr5bB4ISMHB8Kiwpdxp_m5NLTuKysy_LdF8XqJt_mVNUvagSmoyurXvDXFLq-bUloHCGbCeDAGC3JGO9xQULBFL-n3PyXK7I6bI5t9628LOVue8diomltkNyPGsHj8nlGsm7mXFb6v8hh-joZTzPjcVZpsCMwodOimGpKP6kLnbg.wcuM4t7cI5gvhU5xyqPA43B4r4CbORKtLUdIMifhtjU&dib_tag=se&keywords=startups+y+angeles&qid=1743421366&sprefix=startups+y+angeles%2Caps%2C331&sr=8-1"
    },
    isPopular: false
  }
};
---

<div class="bg-book-gray">
  <div class="pt-12 px-4 sm:px-6 lg:px-8 lg:pt-20">
    <div class="text-center">
      <p
        class="mt- text-3xl leading-9 font-extrabold text-white sm:text-4xl sm:leading-10 lg:text-5xl lg:leading-none"
      >
        Compra ahora
      </p>
    </div>
  </div>
  
  <div class="mt-16 bg-white pb-12 lg:mt-20 lg:pb-20">
    <div class="relative z-0">
      <div class="absolute inset-0 h-5/6 bg-book-gray lg:h-2/3"></div>
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="relative lg:grid lg:grid-cols-2 lg:gap-8">
          
          <!-- Ebook Option -->
          <div class="mt-10 max-w-lg mx-auto lg:mt-0 lg:max-w-none lg:mx-0">
            <div class="relative z-10 rounded-lg shadow-xl h-full">
              {pricingOptions.ebook.isPopular && (
                <div>
                  <div class="pointer-events-none absolute inset-0 rounded-lg border-2 border-book-theme" aria-hidden="true"></div>
                  <div class="absolute inset-x-0 top-0 transform translate-y-px">
                    <div class="flex justify-center transform -translate-y-1/2">
                      <span class="inline-flex rounded-full text-book-gray bg-book-theme px-4 py-1 text-sm font-semibold tracking-wider uppercase">
                        Más Popular
                      </span>
                    </div>
                  </div>
                </div>
              )}
              
              <div id="buy" class="bg-white rounded-t-lg px-6 pt-12 pb-10">
                <div>
                  <h3 class="text-center text-3xl font-semibold text-book-gray sm:-mx-6" id="ebook">
                    {pricingOptions.ebook.title}
                  </h3>
                  <div class="mt-4 flex items-center justify-center">
                    <span class="px-1 flex items-start text-6xl tracking-tight text-book-gray sm:text-6xl">
                      <span class="font-extrabold">$15.000</span>
                    </span>
                    <span class="ml-1 text-xl font-medium text-gray-500">COP</span>
                  </div>
                </div>
              </div>
              
              <div class="border-t-2 border-gray-100 rounded-b-lg pt-10 pb-8 px-6 bg-gray-50 sm:px-10 sm:py-10">
                <ul class="space-y-4">
                  {pricingOptions.ebook.details.map((item) => (
                    <li class="flex items-start">
                      <div class="flex-shrink-0">
                        <Checkmark/>
                      </div>
                      <p class="ml-3 text-base font-medium text-gray-500">
                        {item}
                      </p>
                    </li>
                  ))}
                </ul>
                <div class="mt-10">
                  <div class="rounded-lg shadow-md">
                    <button
                      id="comprarBtn"
                      class="block w-full text-center rounded-lg border border-transparent px-6 py-4 text-xl leading-6 font-semibold text-book-gray bg-book-theme hover:bg-yellow-200 focus:outline-none transition duration-300 ease-in-out"
                    >
                      {pricingOptions.ebook.button.label}
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Amazon Option -->
          <div class="mt-10 mx-auto max-w-lg lg:mt-0 lg:max-w-none lg:mx-0">
            <div class="rounded-lg shadow-xl h-full">
              <div class="bg-white rounded-t-lg px-6 pt-12 pb-10">
                <div>
                  <h3 class="text-center text-3xl font-semibold text-book-gray" id="amazon">
                    {pricingOptions.amazon.title}
                  </h3>
                  <div class="mt-4 flex items-center justify-center">
                    <span class="px-1 flex items-start text-6xl tracking-tight text-book-gray">
                      <span class="font-extrabold">$4</span>
                    </span>
                    <span class="ml-1 text-xl font-medium text-gray-500">USD</span>
                  </div>
                </div>
              </div>
              
              <div class="border-t-2 border-gray-100 rounded-b-lg pt-10 pb-8 px-6 bg-gray-50 sm:px-10 sm:py-10">
                <ul class="space-y-4">
                  {pricingOptions.amazon.details.map((item) => (
                    <li class="flex items-start">
                      <div class="flex-shrink-0">
                        <Checkmark/>
                      </div>
                      <p class="ml-3 text-base font-medium text-gray-500">
                        {item}
                      </p>
                    </li>
                  ))}
                </ul>
                <div class="mt-10">
                  <div class="rounded-lg shadow-md">
                    <a
                      target="blank"
                      href={pricingOptions.amazon.button.url}
                      class="block w-full text-center rounded-lg border border-transparent px-6 py-4 text-xl leading-6 font-semibold text-book-gray bg-slate-300 hover:bg-slate-500 focus:outline-none transition duration-300 ease-in-out"
                    >
                      {pricingOptions.amazon.button.label}
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
        </div>
      </div>
      
      
      
    </div>
  </div>
</div>

<!-- Modal de Compra -->
<div id="compraModal" class="hidden fixed inset-0 z-50 overflow-auto bg-black bg-opacity-50">
  <div class="flex items-center justify-center min-h-screen px-4">
    <div class="bg-white rounded-lg max-w-md w-full overflow-hidden shadow-xl">
      <div class="bg-book-theme px-6 py-4">
        <h3 class="text-xl font-bold text-book-gray">Comprar {LIBRO_TITULO}</h3>
      </div>
      
      <form id="compraForm" class="px-6 py-4">
        <div class="mb-4">
          <label for="nombre" class="block text-sm font-medium text-gray-700 mb-1">Nombre</label>
          <input type="text" id="nombre" name="nombre" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
        </div>
        
        <div class="mb-4">
          <label for="apellido" class="block text-sm font-medium text-gray-700 mb-1">Apellido</label>
          <input type="text" id="apellido" name="apellido" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
        </div>
        
        <div class="mb-4">
          <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
          <input type="email" id="email" name="email" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
        </div>
        
        <div class="mb-4">
          <label for="telefono" class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label>
          <input type="tel" id="telefono" name="telefono" class="w-full px-3 py-2 border border-gray-300 rounded-md" required>
        </div>
        
        <div class="mb-6">
          <label class="flex items-center">
            <input type="checkbox" id="terminos" name="terminos" class="mr-2" required>
            <span class="text-sm text-gray-700">He leído y acepto los términos y condiciones</span>
          </label>
        </div>
        
        <div class="flex justify-end">
          <button type="button" id="cancelarBtn" class="mr-2 px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300">
            Cancelar
          </button>
          <button type="submit" id="pagarBtn" class="px-4 py-2 bg-book-theme text-book-gray font-bold rounded-md hover:bg-yellow-400">
            Pagar con Bancolombia
          </button>
        </div>
      </form>
      
      <div id="loadingIndicator" class="hidden px-6 py-4 text-center">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-book-theme mx-auto"></div>
        <p class="mt-4 text-gray-700">Procesando tu pago...</p>
      </div>
    </div>
  </div>
</div>

<!-- Script para cargar widget de Wompi -->
<script is:inline>
  document.addEventListener("DOMContentLoaded", function() {
    // Cargar script de Wompi
    const wompiScript = document.createElement('script');
    wompiScript.type = 'text/javascript';
    wompiScript.src = 'https://checkout.wompi.co/widget.js';
    document.head.appendChild(wompiScript);
  });
</script>

<script define:vars={{ WOMPI_PUBLIC_KEY, LIBRO_PRECIO_CENTS }}>
document.addEventListener("DOMContentLoaded", () => {
  const comprarBtn = document.getElementById("comprarBtn");
  const compraModal = document.getElementById("compraModal");
  const cancelarBtn = document.getElementById("cancelarBtn");
  const compraForm = document.getElementById("compraForm");
  const loadingIndicator = document.getElementById("loadingIndicator");

  // Mostrar/ocultar modal
  comprarBtn.addEventListener("click", () => compraModal.classList.remove("hidden"));
  cancelarBtn.addEventListener("click", () => compraModal.classList.add("hidden"));

  compraForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    
    // Mostrar indicador de carga
    compraForm.classList.add("hidden");
    loadingIndicator.classList.remove("hidden");

    try {
      // Recopilar datos del formulario
      const formData = {
        nombre: document.getElementById("nombre").value,
        apellido: document.getElementById("apellido").value,
        email: document.getElementById("email").value,
        telefono: document.getElementById("telefono").value
      };
      
      // Generar referencia única
      const reference = `LIBRO-${Date.now()}`;
      const amountInCents = parseInt(LIBRO_PRECIO_CENTS);

      // Paso 1: Registrar en Airtable
      const airtable = await fetch("/api/update-airtable-libro", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ ...formData, estado: "PENDIENTE" }),
      });
      
      if (!airtable.ok) {
        throw new Error("No se pudo registrar la compra");
      }

      // Paso 2: Generar firma para Wompi
      const sigResp = await fetch("/api/generar-firma", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ reference, amountInCents }),
      });
      
      if (!sigResp.ok) {
        throw new Error("No se pudo generar la firma de integridad");
      }

      const { signature } = await sigResp.json();
      
      // Guardar información en sessionStorage
      sessionStorage.setItem("userEmail", formData.email);
      sessionStorage.setItem("userName", `${formData.nombre} ${formData.apellido}`);
      
      // Configurar opciones de checkout
      const checkoutConfig = {
        currency: 'COP',
        amountInCents: amountInCents,
        reference: reference,
        publicKey: WOMPI_PUBLIC_KEY || 'pub_test_WJDz2IFohyX2NRgkZDTSD0KlnitcAqUi',
        signature: { integrity: signature },
        redirectUrl: `${window.location.origin}/confirmacion-pago?email=${encodeURIComponent(formData.email)}&status=APPROVED`,
        customerData: {
          email: formData.email,
          fullName: `${formData.nombre} ${formData.apellido}`,
          phoneNumber: formData.telefono,
          phoneNumberPrefix: '+57'
        }
      };

      // Inicializar y abrir el widget de Wompi
      if (typeof WidgetCheckout !== 'undefined') {
        const checkout = new WidgetCheckout(checkoutConfig);
        
        checkout.open(function(result) {
          console.log("Transacción completada:", result);
          loadingIndicator.classList.add("hidden");
          compraForm.classList.remove("hidden");
          compraModal.classList.add("hidden");
        });
      } else {
        // Wompi no se cargó correctamente, usar redirección alternativa
        console.warn("Widget de Wompi no disponible, utilizando redirección");
        
        // Crear formulario para Web Checkout como alternativa
        const form = document.createElement('form');
        form.action = 'https://checkout.wompi.co/p/';
        form.method = 'GET';
        form.style.display = 'none';
        
        // Agregar campos al formulario
        const addField = (name, value) => {
          const input = document.createElement('input');
          input.type = 'hidden';
          input.name = name;
          input.value = value;
          form.appendChild(input);
        };
        
        addField('public-key', WOMPI_PUBLIC_KEY || 'pub_test_WJDz2IFohyX2NRgkZDTSD0KlnitcAqUi');
        addField('currency', 'COP');
        addField('amount-in-cents', amountInCents);
        addField('reference', reference);
        addField('signature:integrity', signature);
        
        const base = `${window.location.origin}/confirmacion-pago?email=${encodeURIComponent(formData.email)}`;
        addField('redirect-url', `${base}&status=APPROVED`);
        addField('failure-redirect-url', `${base}&status=DECLINED`);
        addField('pending-redirect-url', `${base}&status=PENDING`);
        
        // Agregar formulario al DOM y enviarlo
        document.body.appendChild(form);
        form.submit();
      }
    } catch (err) {
      console.error("Error durante el proceso de compra:", err);
      alert("Hubo un error al procesar tu solicitud: " + err.message);
      loadingIndicator.classList.add("hidden");
      compraForm.classList.remove("hidden");
    }
  });
});
</script>

<style>
  .bg-book-gray {
    background-color: #2d3748;
  }
  
  .bg-book-theme {
    background-color: #ffc107;
  }
  
  .border-book-theme {
    border-color: #ffc107;
  }
  
  .text-book-gray {
    color: #2d3748;
  }
</style>