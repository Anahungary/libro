---
import Layout from "../layouts/Layout.astro";
import { updateTransactionStatus } from '../pages/api/update-airtable-libro';
import { LIBRO_TITULO } from "../config";

// Recuperar parámetros de la URL
const email = Astro.url.searchParams.get('email');
const status = Astro.url.searchParams.get('status');
const name = Astro.url.searchParams.get('name');
// Procesar el estado de la transacción
let transactionResult = {
  success: false,
  title: "Procesando tu pedido",
  message: "Estamos verificando el estado de tu pago...",
  statusClass: "text-yellow-500"
};

if (email && status) {
  try {
    // Actualizar el estado en Airtable usando el email como referencia
    const result = await updateTransactionStatus(email, status);
    
    // Determinar resultado según el estado
    if (status === 'APPROVED') {
      transactionResult = {
        success: true,
        title: "¡Gracias por tu compra!",
        message: "Tu pago ha sido confirmado. En breve recibirás un correo con las instrucciones para descargar tu libro.",
        statusClass: "text-green-500"
      };
    } else if (status === 'PENDING') {
      transactionResult = {
        success: false,
        title: "Pago en proceso",
        message: "Tu pago está siendo procesado. Te notificaremos por correo electrónico cuando se complete.",
        statusClass: "text-yellow-500"
      };
    } else {
      transactionResult = {
        success: false,
        title: "Pago no completado",
        message: "Lo sentimos, hubo un problema con tu pago. Por favor intenta nuevamente.",
        statusClass: "text-red-500"
      };
    }
  } catch (error) {
    console.error('Error al procesar el estado:', error);
    transactionResult = {
      success: false,
      title: "Error",
      message: "Ocurrió un error al procesar tu solicitud. Por favor, contáctanos directamente.",
      statusClass: "text-red-500"
    };
  }
}

// Recuperar información del usuario del sessionStorage (se hará con JavaScript en el cliente)
---

<Layout title="Confirmación de Pago - Startups y Ángeles">
  <main class="container mx-auto px-4 py-16 max-w-3xl">
    <div class="bg-white rounded-lg shadow-lg overflow-hidden">
      <div class="bg-book-gray text-white p-6">
        <h1 class="text-3xl font-bold">{transactionResult.title}</h1>
      </div>
      
      <div class="p-8">
        <div class="mb-8 text-center">
          {transactionResult.success ? (
            <div class="flex justify-center mb-6">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
          ) : (
            <div class="flex justify-center mb-6">
              {status === 'PENDING' ? (
                <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24 text-yellow-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              ) : (
                <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                </svg>
              )}
            </div>
          )}
          
          <p class={`text-xl ${transactionResult.statusClass}`}>{transactionResult.message}</p>
          
          <div class="mt-6 p-4 bg-gray-50 rounded-lg border border-gray-200" id="orderDetails">
            <p class="text-lg font-semibold mb-2">Detalles de tu pedido:</p>
            <ul class="space-y-2 text-gray-700">
              <li><span class="font-medium">Producto:</span> <span class="ml-2">{LIBRO_TITULO}</span></li>
              <li><span class="font-medium">Nombre:</span> <span class="ml-2" id="nameSpan">-</span></li>
              <li><span class="font-medium">Email:</span> <span class="ml-2" id="emailSpan">-</span></li>
            </ul>
          </div>
        </div>
        
        <div class="flex justify-center">
          <a href="/" class="inline-block px-6 py-3 bg-book-theme text-book-gray font-bold rounded-md hover:bg-yellow-400 transition duration-200">
            Volver al inicio
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Recuperar información del usuario del sessionStorage
  document.addEventListener('DOMContentLoaded', function() {
    const nameSpan = document.getElementById('nameSpan');
    const emailSpan = document.getElementById('emailSpan');
    
    // Intentar obtener de la URL primero
    const urlParams = new URLSearchParams(window.location.search);
    const name = urlParams.get('name');
    const email = urlParams.get('email');
    
    // Luego intentar obtener del sessionStorage como respaldo
    const storedName = sessionStorage.getItem('userName');
    const storedEmail = sessionStorage.getItem('userEmail');
    
    // Usar los valores recuperados o los valores de respaldo
    if (nameSpan) nameSpan.textContent = name || storedName || 'No disponible';
    if (emailSpan) emailSpan.textContent = email || storedEmail || 'No disponible';
  });
</script>

<style>
  .bg-book-gray {
    background-color: #2d3748;
  }
  
  .bg-book-theme {
    background-color: #ffc107;
  }
  
  .text-book-gray {
    color: #2d3748;
  }
</style>